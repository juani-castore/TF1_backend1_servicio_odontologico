# nivel minimo de loggin y los appenders a emplear
log4j.rootLogger=DEBUG, stdout, file

# nivel en que se empezaran a mostrar las advertencias, tanto por consola como almacenarse en el fichero
log4j.logger.infoLogger=DEBUG

# aca evitamos que los appenders hereden la configuracion de sus appenders padres
log4j.additivity.infoLogger = false

# --------------------------------
# Crear la configuracion para imprimir mensajes por consola

# indicamos qué tipo de logger será
log4j.appender.stdout=org.apache.log4j.ConsoleAppender

# le decimos que queremos imprimirlo directamente por la consola
log4j.appender.stdout.Target=System.out

# las dos últimas líneas son para configurar la plantilla que tendrá cada mensaje
log4j.appender.stdout.layout=org.apache.log4j.PatternLayout
log4j.appender.stdout.layout.ConversionPattern=[%d{yyyy-MM-dd HH:mm:ss}] [ %-5p] [%c{1}:%L] %m%n

# -------------------------------
# Configurar el appender, vamos a hacer exactamente lo mismo que antes pero configurando el appender para que salga a través de un fichero

# configuramos la clase como RollingFileAppender, lo que significa que se crearán distintos ficheros al cumplirse determinadas condiciones
log4j.appender.file=org.apache.log4j.RollingFileAppender

# indicamos el nombre (con ruta incluida) que queremos que tenga nuestro fichero de log
log4j.appender.file.File=avisos.log

# establecemos el tamaño máximo que tendrá nuestro fichero
log4j.appender.file.MaxFileSize=5MB

# indicamos que plantilla tendrán nuestros mensajes (igual que en la consola)
log4j.appender.file.layout=org.apache.log4j.PatternLayout
log4j.appender.file.layout.ConversionPattern=[%d{yyyy-MM-dd HH:mm:ss}] [ %-5p] [%c{1}:%L] %m%n
